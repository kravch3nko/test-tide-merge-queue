name: Auto Rebase PRs

on:
  # Trigger when main branch is updated
  push:
    branches:
      - main
  # Allow manual triggering
  workflow_dispatch:
  # Check PRs periodically
  schedule:
    - cron: '0 */6 * * *'  # Run every 6 hours

jobs:
  auto-rebase:
    runs-on: ubuntu-latest
    
    permissions:
      contents: write
      pull-requests: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Fetch all history for all branches and tags
          
      - name: Find and rebase outdated PRs
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # Get list of open PRs
          prs=$(gh pr list --json number,headRefName,baseRefName,mergeStateStatus --jq '.[] | select(.mergeStateStatus == "BEHIND") | "\(.number) \(.headRefName)"')
          
          if [ -z "$prs" ]; then
            echo "No PRs need rebasing"
            exit 0
          fi
          
          # Configure Git
          git config user.name "GitHub Actions Bot"
          git config user.email "actions@github.com"
          
          # Process each PR that needs rebasing
          echo "$prs" | while read -r pr branch; do
            echo "Processing PR #$pr (branch: $branch)"
            
            # Try to rebase
            if gh pr checkout "$pr" && git rebase origin/main; then
              git push --force-with-lease origin HEAD
              gh pr comment "$pr" --body "✨ Successfully rebased this PR on top of the main branch"
            else
              # If rebase failed, clean up and notify
              git rebase --abort || true
              gh pr comment "$pr" --body "⚠️ Attempted to rebase this PR but encountered conflicts. Manual intervention needed."
            fi
          done
